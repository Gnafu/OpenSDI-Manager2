<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
        http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-3.0.xsd
    ">
    <import resource="geocollect_mailconfig.xml"/>

    <!-- Set the input from the "input" object in the context and sets the output to the "output" object in the context -->
    <bean id="action1Config" class="it.geosolutions.opensdi2.workflow.action.InputOutputConfiguration">
        <property name="inputObjectId" value="input"></property>
        <property name="outputObjectId" value="feature"></property>
    </bean>

    <!-- we want to edit the Feature -->
    <bean id="action2Config" class="it.geosolutions.opensdi2.workflow.action.TransformConfiguration">
        <property name="inputObjectId" value="feature"></property>
        <property name="outputObjectId" value="transformed"></property>
        <property name="inputPropertyAccessor" >
            <util:list>
                <ref bean="featurePropertyAccessor"></ref>
            </util:list>
        </property>
        <property name="outputPropertyAccessor" ref="featurePropertyAccessor" />
        <property name="rules" ref="rules"></property>
        <property name="preBuilder" ref="featurePreBuilder"></property>
    </bean>

    <!-- Rules defines the keys in the output object to be assigned with the computed "value" from the input object -->
    <util:map id="rules">
        <entry key="geometry" value="geometry" />
    </util:map>

    <!-- Property Accessors -->
    <bean id="featurePropertyAccessor" class="it.geosolutions.opensdi2.workflow.transform.spel.accessors.SimpleFeaturePropertyAccessor"></bean>
    <bean id="mapPropertyAccessor" class="it.geosolutions.opensdi2.workflow.transform.spel.accessors.MapPropertyAccessor"></bean>
    <bean id="reflectionPropertyAccessor" class="org.springframework.expression.spel.support.ReflectivePropertyAccessor"></bean>

    <!-- Prebuilders -->
    <bean id="mapPreBuilder" class="it.geosolutions.opensdi2.workflow.transform.spel.prebuilders.MapPreBuilder"></bean>
    <bean id="featurePreBuilder" class="it.geosolutions.opensdi2.workflow.transform.spel.prebuilders.SimpleFeaturePreBuilder">
        <constructor-arg ref="action3Config"/>
        <constructor-arg value="feature"/>
    </bean>

    <bean id="action3Config" class="it.geosolutions.opensdi2.workflow.action.DataStoreConfiguration">
        <property name="inputObjectId" value="feature"></property>
        <property name="connectionProperties" ref="connectionProperties"/>
        <property name="typeName" value="rilevamenti_effettuati" />
    </bean>

    <bean id="action4Config" class="it.geosolutions.opensdi2.workflow.action.EmailActionConfiguration">
        <property name="notificationService" ref="notificationService"></property>
        <property name="inputPropertyAccessors">
                <util:list>
                    <ref bean="featurePropertyAccessor"></ref>
                    <ref bean="mapPropertyAccessor"></ref>
                     <ref bean="reflectionPropertyAccessor"></ref>
                </util:list>
        </property>
        <property name="rules">
            <util:map>
                <entry key="from" value="'gnafutestmail@gmail.com'"></entry>
                <entry key="to" value="'gnafutestmail@gmail.com'"></entry>
                <entry key="subject" value="'Sample email:' + contextElements.feature.tipologia_rifiuto"></entry>
                <entry key="template" value="'email-test.ftl'"></entry>
                <!--
                <entry key="model.prop0" value="contextElements.feature.nome_rilevatore"></entry>
                <entry key="model.prop1" value="contextElements.feature.comune"></entry>
                -->
                <entry key="model.prop0" value="'testvalue'"></entry>
                <entry key="model.prop1" value="'anotherFixedValue'"></entry>
                <entry key="model.propcustom" value="'propcustom'"></entry>
            </util:map>
        </property>

    </bean>

    <!-- GeoTools DataStore conntection properties -->
    <util:map id="connectionProperties">
        <entry key="dbtype" value="postgis"/>
        <entry key="database" value="genova"/>
        <entry key="host" value="192.168.1.69"/>
        <entry key="port" value="5432"/>
        <entry key="schema" value="public"/>
        <entry key="user" value="postgres"/>
        <entry key="passwd" value="postgres"/>
    </util:map>

    <!-- Reads a GeoJSON string and save it in the context as SimpleFeature -->
    <bean id="action1" class="it.geosolutions.opensdi2.workflow.action.GeoJSONReader">
        <property name="configuration" ref="action1Config"></property>
    </bean>

    <!-- Writes the inputObjectId into the DataStore defined by the DataStoreConfiguration -->
    <bean id="action2" class="it.geosolutions.opensdi2.workflow.action.TransformAction">
        <property name="configuration" ref="action2Config"></property>
        <property name="id" value="action2"></property>
    </bean>

    <!-- Rules defines the keys in the output object to be assigned with the computed "value" from the input object -->
    <util:map id="writerMappings">
        <entry key="GEOMETRY" value="geometry" />
    </util:map>

    <bean id="action3" class="it.geosolutions.opensdi2.workflow.action.DataStoreWriter">
        <property name="configuration" ref="action3Config"></property>
        <property name="attributeMappings" ref="writerMappings"/>
        <property name="id" value="writer"></property>
    </bean>
    <bean id="action4" class="it.geosolutions.opensdi2.workflow.action.EmailAction">
        <property name="configuration" ref="action4Config"></property>
        <property name="id" value="mailer"></property>
    </bean>
    <!-- list of actions for the action sequence -->
    <util:list id="actions">
            <ref bean="action1"></ref>
            <!-- <ref bean="action2"></ref> -->
            <ref bean="action3"></ref>
            <ref bean="action4"></ref>
    </util:list>

    <bean id="sequence" class="it.geosolutions.opensdi2.workflow.ActionSequence">
        <property name="actions" ref="actions" />
        <property name="id" value="sequence"></property>
    </bean>

</beans>
